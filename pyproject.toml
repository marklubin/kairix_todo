[project]
name = "kairix-todo"
version = "0.1.0"
description = "A todo list to use with kairix AI system."
authors = [
    {name = "Mark Lubin",email = "melubin@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "black (>=25.1.0,<26.0.0)",
    "pytest (>=8.3.5,<9.0.0)",
    "mypy (>=1.15.0,<2.0.0)",
    "isort (>=6.0.1,<7.0.0)",
    "flask (>=3.1.0,<4.0.0)",
    "flask-api (>=3.1,<4.0)",
    "sqlalchemy (>=2.0.40,<3.0.0)",
    "flask-sqlalchemy (>=3.1.1,<4.0.0)",
    "flask-cli (>=0.4.0,<0.5.0)",
    "poethepoet (>=0.33.1,<0.34.0)",
    "gunicorn (>=23.0.0,<24.0.0)",
    "autoflake (>=2.3.1,<3.0.0)",
    "pydantic (>=2.11.2,<3.0.0)",
    "marshmallow (>=3.26.1,<4.0.0)"
]

[tool.poe.tasks]

# Formatters (auto-fixing)
format = { shell = "black . && isort ." }

# Linters (checks)
lint = { shell = "mypy . && black --check . && isort --check ." }

# Test runner
test = "pytest tests/"

# Type checker
typecheck = { shell = "mypy . --ignore-missing-imports" }

# Comprehensive pre-check (lint + test)
check = { shell = "poe lint && poe test" }

# Flask dev server (auto reload, debug)
dev = { shell = "FLASK_ENV=development FLASK_APP=src/kairix_todo/app.py flask run" }

# Flask production server (gunicorn recommended)
prod = { shell = "gunicorn --pythonpath src kairix_todo.app:app --bind 0.0.0.0:8752" }


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
